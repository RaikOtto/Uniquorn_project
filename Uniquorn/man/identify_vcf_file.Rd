% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Identify_VCF_file.R
\name{identify_vcf_file}
\alias{identify_vcf_file}
\title{identify_VCF_file}
\usage{
identify_vcf_files( 
vcf_file,
output_file = "",
ref_gen = "GRCH37",
minimum_matching_mutations = 0,
mutational_weight_inclusion_threshold = 0.5,
write_xls = FALSE,
output_bed_file = FALSE,
robust_mode = FALSE,
manual_identifier_bed_file = "",
verbose = TRUE,
q_value = .05,
n_threads = 1)
}
\arguments{
\item{vcf_file}{Input vcf file. Only one sample column allowed.}

\item{output_file}{Path of the output file. If blank, 
autogenerated as name of input file plus '_uniquorn_ident.tab' suffix.}

\item{ref_gen}{Reference genome version. All training sets are 
associated with a reference genome version. Default: GRCH37}

\item{minimum_matching_mutations}{The minimum amount of mutations that 
has to match between query and training sample for a positive prediction}

\item{mutational_weight_inclusion_threshold}{Include only mutations 
with a weight of at least x. Range: 0.0 to 1.0. 1= unique to CL. 
~0 = found in many CL samples.}

\item{write_xls}{Create identification results additionally 
as xls file for easier reading}

\item{output_bed_file}{If BED files for IGV visualization should be 
created for the Cancer Cell lines that pass the threshold}

\item{robust_mode}{Improves specificity at the cost of sensitivity when
reference and query CCL are based on heterogeneous technologies, in 
particular with respect to the amount of variants available.}

\item{manual_identifier_bed_file}{Manually enter a vector of CL 
name(s) whose bed files should be created, independently from 
them passing the detection threshold}

\item{verbose}{Print additional information}

\item{n_threads}{Number of threads to be used}

\item{q_value}{Required q-value for identification}
}
\value{
R table with a statistic of the identification result
}
\description{
Identifies a cancer cell lines contained in a vcf file based 
on the pattern (start & length) of all contained mutations/ variations.
}
\details{
\code{identify_vcf_file} parses the vcf file and predicts 
the identity of the sample
}
\examples{
HT29_vcf_file = system.file("extdata/HT29.vcf.gz", package="Uniquorn");

identification = identify_vcf_files(HT29_vcf_file)
}
